// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Factory  > Factory will create instance and collect metadata 1`] = `
[
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/base/test",
      "type": "get",
    },
    "interceptors": [],
    "method": "test",
    "name": "A",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "A",
  },
]
`;

exports[`Factory  > In extended case 1`] = `
[
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/B/testB",
      "type": "get",
    },
    "interceptors": [],
    "method": "test2",
    "name": "B",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "B",
  },
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/B/testA",
      "type": "get",
    },
    "interceptors": [],
    "method": "test",
    "name": "B",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "B",
  },
]
`;

exports[`Factory  > multple class extends the same class 1`] = `
[
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/B/testB",
      "type": "get",
    },
    "interceptors": [],
    "method": "test2",
    "name": "B",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "B",
  },
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/B/testA",
      "type": "get",
    },
    "interceptors": [],
    "method": "test",
    "name": "B",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "B",
  },
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/C/testC",
      "type": "get",
    },
    "interceptors": [],
    "method": "test3",
    "name": "C",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "C",
  },
  {
    "define": {},
    "guards": [],
    "header": {},
    "http": {
      "route": "/C/testA",
      "type": "get",
    },
    "interceptors": [],
    "method": "test",
    "name": "C",
    "params": [
      {
        "index": 0,
        "key": "id",
        "type": "query",
      },
      {
        "index": 1,
        "key": "name",
        "type": "body",
      },
    ],
    "plugins": [],
    "tag": "C",
  },
]
`;
